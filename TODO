Todo
----

-data
  - friend lists
    - as contact groups or as collections?
  - events
    - friend's events??
    - 0.1 add checkboxes "show declined events" "show maybe events"
    - 0.1 add organizer
    - add attendance label + "change attendence" link
    - rsvp, participants management
      - requires resource-specific incidence editor plugin (talk to openchange guys, they also need that)
  - messages
    - inbox, outbox
    - add "reply with facebook" button and blurb explaining that native replying will not work
      - in reply to: invalid@whatever
      - real reply would require resource-specific transport, like in openchange
    - use recipients and dates
    - group thread with one thread leader
    - propagate unread/read status back to FB
    - make deletions work
    - x-face headers in the absence of photo linking via email addresses
    - attachments
      - photos as real attachments
      - links inline (HTML)
  - feeds
    - show in Kontact summary
      - checkbox "show in kontact summary"
      - also provide plasma app
      - what about settings, simply open resource settings?
      - ability to filter wall posts
- 0.1 automatically sync every x minutes setting
  - not when offline
- offline support / cache policies / parts
- 0.1 make libkfacebook static
- plasma silk wizard (talk to sebas)
  - also for kopete
- set proper resourcec status when not authenticated
- push notifications
  - especially for news feed -> nice animation when item appears
- 0.1 Better authentication
    - when authentication fails because access token is rejected, show more user-friendly error message,
      including instructions on how to fix that.
    - pop up on first sync if the access token is empty, with "don't ask again" option
- own kpart for messages, invite replies and so on (check what facebook mobile can do!)
- 0.1 add i18c for strings that need context
- 0.1 userbase documentation that shows how to set up resources, both in kdepim 4.4 and 4.6
    - also add Help button in settings dialog that opens the webpage
- 0.1 Flesh out the projects.kde.org page a bit, with screenshots and a long description
- data received with final events job is getting to big, make it more granular
    - fetch participants with separate jobs
    - only retrive participants on demand
    - streaming
    - add better progress info

Refactor
--------

- add documentation to job classes + general overview documentation
	- how facebook requests work (HTTP+QJSON), job-based approach
- refactor facebookresource.cpp. It is getting big, and the function names are friends-only
- move all jobs into jobs/ subdirectory

Roadmap
-------

0.1: read-only events + notes
0.2: newsfeed (kontact summary plugin)
0.3: read-only messages
1.0: 0.3 after some testing
